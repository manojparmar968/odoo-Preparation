# Create basic module by cmd
    ./odoo-bin scaffold module_name ../addons_path

# /web/database/selector
# python odoo-bin -c basic.conf --xmlrpc-port=8017 --save
# "args": ["-cD:\\odoo18\\basic\\odoo\\baic18.conf","-d","18"],
# "args": ["-cD:\\odoo18\\basic\\odoo\\baic18.conf","-u","estate","-d","18"],

# which library to connect postgres in python.
    psycopg2 or psycopg2-binary

# Different types of inheritance in odoo
    1. Classical Inheritance --> The initial type of inheritance is the classic inheritance where we use
        both _name & _inherit attributes together.
        _name = ''
        _inherit = ''

    2. Extension inheritance
        Extension inheritance we will only use the _inherit attribute & do not use _name attribute.
        _inherit = ['account.move']

    3. Delegation inheritance
        Delegation inheritance we use _inherits attribute, this type of inheritance is used if you want
        to sink another model to your current model without affecting the views.
        _name = "account.payment"
        _inherits = {'account.move': 'move_id'}
        move_id = fields.Many2one(comodel_name='account.move')

# Odoo Architecture --> odoo follows a multitier Architecture.
    1. Presentation tier --> The top most level of the application is the user interface.
        The main function of the interface is to transalate task & result to something the user can understand.
    
    2. Logic tier --> This layer coordinates the application, processes commands, make logical decisions &
        evaluations & performs calculations. It also moves & process data between the two surrounding layers.
    
    3. Data tier --> Here information is stored & retrieved from a database or file system. The information 
        is back to logic tier for processing & then back to user.

# res.partner: 
    a partner is a physical or legal entity. It can be a company, an individual or even a contact address.

# res.users: 
    the users of the system. Users can be ‘internal’, i.e. they have access to the Odoo backend. 
    Or they can be ‘portal’, i.e. they cannot access the backend, only the frontend 
    (e.g. to access their previous orders in eCommerce).

5.Deffered income and Deffered expense?
    Deferred revenue is money a company receives before it provides goods or services, 
    while deferred expenses are costs a company pays that aren't recorded until later. 
    Deferred revenue is also known as unearned revenue. 

    Examples of deferred revenue include:
        Rent payments received in advance.
        Annual subscription payments received at the beginning of the year 

    Examples of deferred expenses include:
        Prepaid expenses, such as a company paying for a year-long billboard advertisement
        Exceptional losses, such as damages due to a major earthquake

6.What is Agile methodology?
    Agile methodology is a project management framework that breaks projects down into several dynamic phases, 
    commonly known as sprints. 
    The Agile framework is an iterative methodology. After every sprint, teams reflect and look back to see 
    if there was anything that could be improved so they can adjust their strategy for the next sprint.
        a. Plan
        b. Design
        c. Develop
        d. Test
        e. Deploy
        f. Review